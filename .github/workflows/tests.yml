# This is a basic workflow to help you get started with Actions

name: tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [8.0, 8.1]
        stability: [prefer-lowest, prefer-stable]
        laravel: [9.x]

    name: L${{ matrix.laravel }} - PHP ${{ matrix.php }} - ${{ matrix.stability }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none

      - name: Install Laravel ${{ matrix.laravel }}
        run: |
          composer config -g --no-plugins allow-plugins.kylekatarnls/update-helper true
          composer create-project --prefer-dist laravel/laravel=${{ matrix.laravel }} laravel-${{ matrix.laravel }} --no-interaction

      - name: Require Lucid
        run: |
          cd laravel-${{ matrix.laravel }}
          composer config prefer-stable false
          composer config minimum-stability dev
          composer config repositories.lucid '{"type": "path", "url": "$GITHUB_WORKSPACE", "options": {"symlink": true}}'
          composer require lucidarch/lucid

      - name: Run Tests
        run: |
          chmod +x $GITHUB_WORKSPACE/bin/test-commands.sh
          cp $GITHUB_WORKSPACE/bin/test-commands.sh laravel-${{ matrix.laravel }}
          cd laravel-${{ matrix.laravel }}
          ./test-commands.sh

  code_quality:
    runs-on: ubuntu-latest

    name: Code Quality

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          tools: composer:v2
          coverage: none

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Run Pint
        run: ./vendor/bin/pint --test -v --ansi

      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyse --memory-limit=2G

      - name: Run Pest
        run: ./vendor/bin/pest
